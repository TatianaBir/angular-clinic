{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/animation.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/clients/client-add-form/client-add-form.component.html","webpack:///./src/app/components/clients/client-add-form/client-add-form.component.scss","webpack:///./src/app/components/clients/client-add-form/client-add-form.component.ts","webpack:///./src/app/components/clients/client-edit-form/client-edit-form.component.html","webpack:///./src/app/components/clients/client-edit-form/client-edit-form.component.scss","webpack:///./src/app/components/clients/client-edit-form/client-edit-form.component.ts","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.scss","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/employees/employee-add-form/employee-add-form.component.html","webpack:///./src/app/components/employees/employee-add-form/employee-add-form.component.scss","webpack:///./src/app/components/employees/employee-add-form/employee-add-form.component.ts","webpack:///./src/app/components/employees/employees.component.html","webpack:///./src/app/components/employees/employees.component.scss","webpack:///./src/app/components/employees/employees.component.ts","webpack:///./src/app/components/error/error.component.html","webpack:///./src/app/components/error/error.component.scss","webpack:///./src/app/components/error/error.component.ts","webpack:///./src/app/components/header-page/header-page.component.html","webpack:///./src/app/components/header-page/header-page.component.scss","webpack:///./src/app/components/header-page/header-page.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.scss","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/components/start-page/start-page.component.html","webpack:///./src/app/components/start-page/start-page.component.scss","webpack:///./src/app/components/start-page/start-page.component.ts","webpack:///./src/app/models/client.ts","webpack:///./src/app/models/employee.ts","webpack:///./src/app/router/app-routing/app-routing.module.ts","webpack:///./src/app/services/client-service/client.service.ts","webpack:///./src/app/services/employee-service/employee.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { animate, state, style, transition, trigger } from '@angular/animations';\n\n// Component transition animations\nexport const slideInDownAnimation =\n  trigger('routeAnimation', [\n    state('*',\n      style({\n        opacity: 1,\n        transform: 'translateX(0)'\n      })\n    ),\n    transition(':enter', [\n      style({\n        opacity: 0,\n        transform: 'translateX(-100%)'\n      }),\n      animate('0.2s ease-in')\n    ]),\n    transition(':leave', [\n      animate('0.5s ease-out', style({\n        opacity: 0,\n        transform: 'translateY(100%)'\n      }))\n    ])\n  ]);\n","module.exports = \"<header-page></header-page>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './router/app-routing/app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MainComponent } from './components/main/main.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { HeaderPageComponent } from './components/header-page/header-page.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { EmployeesComponent } from './components/employees/employees.component';\nimport { StartPageComponent } from './components/start-page/start-page.component';\nimport { EmployeeService } from './services/employee-service/employee.service';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { ClientService } from './services/client-service/client.service';\nimport { ClientAddFormComponent } from './components/clients/client-add-form/client-add-form.component';\nimport { ClientEditFormComponent } from './components/clients/client-edit-form/client-edit-form.component';\nimport { EmployeeAddFormComponent } from './components/employees/employee-add-form/employee-add-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainComponent,\n    ErrorComponent,\n    HeaderPageComponent,\n    HeaderComponent,\n    EmployeesComponent,\n    StartPageComponent,\n    ClientsComponent,\n    ClientAddFormComponent,\n    ClientEditFormComponent,\n    EmployeeAddFormComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [\n    EmployeeService,\n    ClientService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"col-sm-12 col-md-6 col-lg-6 form-area\\\">\\n  <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"addClient(clientForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"lastname\\\">Фамилия:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"lastname\\\"\\n             required\\n             [(ngModel)]=\\\"client.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\">\\n\\n      <div *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"lastname.errors.required\\\">Заполните это поле</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!lastname.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"name\\\">Имя:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"name\\\"\\n             required\\n             [(ngModel)]=\\\"client.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n      <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"error-message\\\">\\n      <div *ngIf=\\\"name.errors.required\\\">Заполните это поле</div>\\n    </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!name.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"patronymic\\\">Отчество:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"patronymic\\\"\\n             required\\n             [(ngModel)]=\\\"client.patronymic\\\" name=\\\"patronymic\\\" #patronymic=\\\"ngModel\\\">\\n      <div *ngIf=\\\"patronymic.invalid && (patronymic.dirty || patronymic.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"patronymic.errors.required\\\">Заполните это поле</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!patronymic.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group phone\\\">\\n      <label class=\\\"col-4\\\" for=\\\"phone\\\">Телефон:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"phone\\\"\\n             required minlength=\\\"9\\\" maxlength=\\\"9\\\"\\n             [(ngModel)]=\\\"client.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\">\\n      <div *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"phone.errors.required\\\">Заполните это поле</div>\\n\\n        <div *ngIf=\\\"phone.errors.minlength\\\">Телефон должен состоять из 9 знаков</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!phone.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"doctor\\\">Лечащий врач:</label>\\n      <select class=\\\"form-control col-7\\\" id=\\\"doctor\\\" [(ngModel)]=\\\"client.doctor\\\" name=\\\"doctor\\\">\\n        <option *ngFor=\\\"let employee of employees\\\" [value]=\\\"employee.lastname\\\">\\n          {{employee.lastname}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"discount\\\">Дисконт:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"discount\\\"\\n             [(ngModel)]=\\\"client.discount\\\" name=\\\"discount\\\">\\n    </div>\\n\\n    <div class=\\\"form-group textarea\\\">\\n      <label class=\\\"col-4\\\" for=\\\"comment\\\">Комментарий:</label>\\n      <textarea rows=\\\"6\\\" type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"comment\\\"\\n                [(ngModel)]=\\\"client.comment\\\" name=\\\"comment\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"button-area\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success green\\\">Ок</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"changeBoolean(); clientForm.reset();\\\">Назад</button>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","module.exports = \".button-area {\\n  margin-top: 20px;\\n  margin-right: 10%;\\n  display: flex;\\n  justify-content: flex-end; }\\n  .button-area .green {\\n    margin-right: 10px; }\\n  .form-area {\\n  margin: 30px auto; }\\n  .form-area .form-group:not(.textarea) {\\n    height: 38px; }\\n  .form-area .form-group {\\n    display: flex;\\n    position: relative; }\\n  .form-area .form-group .ng-valid[required], .form-area .form-group .ng-valid.required {\\n      border-right: 5px solid #61C180; }\\n  .form-area .form-group .ng-invalid:not(form) {\\n      border-right: 5px solid cornflowerblue; }\\n  .form-area .form-group .hidden {\\n      display: none; }\\n  .form-area .form-group .error-message {\\n      position: absolute;\\n      left: 35%;\\n      top: 100%;\\n      display: block; }\\n  .form-area .form-group .error-message div {\\n        color: darkred;\\n        font-size: 10px; }\\n  .form-area .form-group label {\\n      margin-top: 10px; }\\n  .form-area .form-group input {\\n      height: 100%; }\\n  .form-area .form-group textarea {\\n      font-size: 0.8em;\\n      resize: none; }\\n  .form-area .form-group input,\\n    .form-area .form-group textarea {\\n      border-radius: 5px;\\n      border: 1px solid #eee;\\n      outline: none;\\n      box-shadow: none; }\\n  .form-area .form-group input::-webkit-input-placeholder,\\n      .form-area .form-group textarea::-webkit-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-moz-placeholder,\\n      .form-area .form-group textarea:-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input::-moz-placeholder,\\n      .form-area .form-group textarea::-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-ms-input-placeholder,\\n      .form-area .form-group textarea:-ms-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:focus,\\n      .form-area .form-group textarea:focus {\\n        box-shadow: 0 0 5px cornflowerblue; }\\n  .form-area .form-group input:focus::-webkit-input-placeholder,\\n        .form-area .form-group textarea:focus::-webkit-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-moz-placeholder,\\n        .form-area .form-group textarea:focus:-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus::-moz-placeholder,\\n        .form-area .form-group textarea:focus::-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-ms-input-placeholder,\\n        .form-area .form-group textarea:focus:-ms-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group select {\\n      background-color: white;\\n      width: 100%;\\n      line-height: 38px;\\n      padding: 6px 20px 6px 15px;\\n      border: 1px solid #eee; }\\n  .form-area .form-group select:focus {\\n        outline: none;\\n        box-shadow: 0px 0px 5px cornflowerblue; }\\n  .form-area .form-group select option {\\n        padding-left: 30px; }\\n  .form-area div.phone {\\n    position: relative; }\\n  .form-area div.phone input {\\n      padding-left: 52px; }\\n  .form-area div.phone::after {\\n      content: '+380';\\n      color: black;\\n      position: absolute;\\n      width: 20px;\\n      height: 15px;\\n      top: 20%;\\n      left: 35%; }\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { Client } from '../../../models/client';\nimport { ClientService } from '../../../services/client-service/client.service';\nimport { EmployeeService } from '../../../services/employee-service/employee.service';\nimport { Employee } from '../../../models/employee';\n\n@Component({\n  selector: 'app-client-add-form',\n  templateUrl: './client-add-form.component.html',\n  styleUrls: ['./client-add-form.component.scss']\n})\nexport class ClientAddFormComponent implements OnInit {\n  @Output() listState = new EventEmitter<boolean>();\n  client: Client;\n  employees: Employee[];\n  errorMessage: boolean;\n\n  constructor(private router: Router, private clientService: ClientService, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.client = new Client;\n    this.employeeService.getEmployees()\n      .subscribe(\n        (res: Employee[]) => this.employees = res,\n        (error) => this.router.navigate(['/error'])\n      );\n  }\n\n  changeBoolean() {\n    this.listState.emit(true);\n  }\n\n  addClient(form) {\n    if (form.invalid) {\n      this.errorMessage = true;\n      return;\n    }\n    const value = form.value;\n    const newClient = new Client;\n    newClient.lastname = value.lastname;\n    newClient.name = value.name;\n    newClient.patronymic = value.patronymic;\n    newClient.phone = value.phone;\n   /* newClient.comment = value.comment;\n    newClient.discount = value.discount;\n    newClient.doctor = value.doctor;*/\n\n    // this.changeBoolean(); // TODO: remove after DB connecting\n    this.clientService.addClient(newClient)\n      .subscribe(\n        (res) => {\n\n          this.changeBoolean();\n        },\n        // (error) => this.router.navigate(['/error'])\n        (error) => console.log(error)\n      );\n  }\n\n}\n","module.exports = \"<div class=\\\"col-sm-12 col-md-6 col-lg-6 form-area\\\">\\n  <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"editClient(clientForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"lastname\\\">Фамилия:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"lastname\\\"\\n             required\\n             [(ngModel)]=\\\"client.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\">\\n      <div *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\"\\n           class=\\\"error-message\\\">\\n\\n        <div *ngIf=\\\"lastname.errors.required\\\">\\n          Заполните это поле\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"name\\\">Имя:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"name\\\"\\n             required minlength=\\\"4\\\"\\n             [(ngModel)]=\\\"client.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n      <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n           class=\\\"error-message\\\">\\n\\n        <div *ngIf=\\\"name.errors.required\\\">\\n          Заполните это поле\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"patronymic\\\">Отчество:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"patronymic\\\"\\n             required\\n             [(ngModel)]=\\\"client.patronymic\\\" name=\\\"patronymic\\\" #patronymic=\\\"ngModel\\\">\\n      <div *ngIf=\\\"patronymic.invalid && (patronymic.dirty || patronymic.touched)\\\"\\n           class=\\\"error-message\\\">\\n\\n        <div *ngIf=\\\"patronymic.errors.required\\\">\\n          Заполните это поле\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group phone\\\">\\n      <label class=\\\"col-4\\\" for=\\\"phone\\\">Телефон:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"phone\\\"\\n             required minlength=\\\"9\\\" maxlength=\\\"9\\\"\\n             [(ngModel)]=\\\"client.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\">\\n      <div *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\"\\n           class=\\\"error-message\\\">\\n\\n        <div *ngIf=\\\"phone.errors.required\\\">\\n          Заполните это поле\\n        </div>\\n\\n        <div *ngIf=\\\"phone.errors.minlength\\\">\\n          Телефон должен состоять из 9 знаков\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"doctor\\\">Лечащий врач:</label>\\n      <select class=\\\"form-control col-7\\\" id=\\\"doctor\\\" [(ngModel)]=\\\"client.doctor\\\" name=\\\"doctor\\\">\\n        <option *ngFor=\\\"let employee of employees\\\" [value]=\\\"employee.lastname\\\">\\n          {{employee.lastname}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"discount\\\">Дисконт:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"discount\\\"\\n             [(ngModel)]=\\\"client.discount\\\" name=\\\"discount\\\">\\n    </div>\\n\\n    <div class=\\\"form-group textarea\\\">\\n      <label class=\\\"col-4\\\" for=\\\"comment\\\">Комментарий:</label>\\n      <textarea type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"comment\\\"\\n                [(ngModel)]=\\\"client.comment\\\" name=\\\"comment\\\" rows=\\\"6\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"button-area\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success green\\\">Редактировать</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"changeBoolean();\\\">Назад</button>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","module.exports = \".button-area {\\n  margin-top: 20px;\\n  margin-right: 10%;\\n  display: flex;\\n  justify-content: flex-end; }\\n  .button-area .green {\\n    margin-right: 10px; }\\n  .form-area {\\n  margin: 30px auto; }\\n  .form-area .form-group:not(.textarea) {\\n    height: 38px; }\\n  .form-area .form-group {\\n    display: flex;\\n    position: relative; }\\n  .form-area .form-group .ng-valid[required], .form-area .form-group .ng-valid.required {\\n      border-right: 5px solid #61C180; }\\n  .form-area .form-group .ng-invalid:not(form) {\\n      border-right: 5px solid cornflowerblue; }\\n  .form-area .form-group .hidden {\\n      display: none; }\\n  .form-area .form-group .error-message {\\n      position: absolute;\\n      left: 35%;\\n      top: 100%;\\n      display: block; }\\n  .form-area .form-group .error-message div {\\n        color: darkred;\\n        font-size: 10px; }\\n  .form-area .form-group label {\\n      margin-top: 10px; }\\n  .form-area .form-group input {\\n      height: 100%; }\\n  .form-area .form-group textarea {\\n      font-size: 0.8em;\\n      resize: none; }\\n  .form-area .form-group input,\\n    .form-area .form-group textarea {\\n      border-radius: 5px;\\n      border: 1px solid #eee;\\n      outline: none;\\n      box-shadow: none; }\\n  .form-area .form-group input::-webkit-input-placeholder,\\n      .form-area .form-group textarea::-webkit-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-moz-placeholder,\\n      .form-area .form-group textarea:-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input::-moz-placeholder,\\n      .form-area .form-group textarea::-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-ms-input-placeholder,\\n      .form-area .form-group textarea:-ms-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:focus,\\n      .form-area .form-group textarea:focus {\\n        box-shadow: 0 0 5px cornflowerblue; }\\n  .form-area .form-group input:focus::-webkit-input-placeholder,\\n        .form-area .form-group textarea:focus::-webkit-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-moz-placeholder,\\n        .form-area .form-group textarea:focus:-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus::-moz-placeholder,\\n        .form-area .form-group textarea:focus::-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-ms-input-placeholder,\\n        .form-area .form-group textarea:focus:-ms-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group select {\\n      background-color: white;\\n      width: 100%;\\n      line-height: 38px;\\n      padding: 6px 20px 6px 15px;\\n      border: 1px solid #eee; }\\n  .form-area .form-group select:focus {\\n        outline: none;\\n        box-shadow: 0px 0px 5px cornflowerblue; }\\n  .form-area .form-group select option {\\n        padding-left: 30px; }\\n  .form-area div.phone {\\n    position: relative; }\\n  .form-area div.phone input {\\n      padding-left: 52px; }\\n  .form-area div.phone::after {\\n      content: '+380';\\n      color: black;\\n      position: absolute;\\n      width: 20px;\\n      height: 15px;\\n      top: 20%;\\n      left: 35%; }\\n\"","import {Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from '../../../services/employee-service/employee.service';\nimport { ClientService } from '../../../services/client-service/client.service';\nimport { Employee } from '../../../models/employee';\nimport { Client } from '../../../models/client';\n\n@Component({\n  selector: 'app-client-edit-form',\n  templateUrl: './client-edit-form.component.html',\n  styleUrls: ['./client-edit-form.component.scss']\n})\nexport class ClientEditFormComponent implements OnInit {\n  @Input() client: Client;\n  @Output() listState = new EventEmitter<boolean>();\n  employees: Employee[];\n\n  constructor(private router: Router, private clientService: ClientService, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employeeService.getEmployees()\n      .subscribe(\n        (res: Employee[]) => this.employees = res,\n        (error) => this.router.navigate(['/error'])\n      );\n  }\n\n  changeBoolean() {\n    this.listState.emit(true);\n  }\n\n  editClient(form) {\n    this.changeBoolean();  // TODO: remove after DB connecting\n    const value = form.value;\n\n    /*this.clientService.editClient(this.client)\n      .subscribe(\n        (res) => this.changeBoolean(),\n        (error) => this.router.navigate(['/error'])\n      );*/\n  }\n}\n","module.exports = \"<div class=\\\"content col-12\\\">\\n  <div class=\\\"employees-list\\\" *ngIf=\\\"listState\\\">\\n    <h3 class=\\\"col-12\\\">Пациенты TalMedical</h3>\\n\\n    <div class=\\\"table col-10\\\">\\n      <div class=\\\"table-head\\\">\\n        <div class=\\\"table-cell col-3\\\"><p>Ф.И.О</p></div>\\n        <div class=\\\"table-cell col-3\\\"><p>Телефон</p></div>\\n        <div class=\\\"table-cell col-3\\\"><p>Лечащий врач</p></div>\\n        <div class=\\\"table-cell col-3\\\"><p>Дисконт</p></div>\\n      </div>\\n      <div class=\\\"table-row\\\" *ngFor=\\\"let client of clients\\\">\\n        <div class=\\\"table-cell col-3 include-hover\\\">\\n          <p>{{ client.lastname }} {{ client.name }} {{client.patronymic}}</p>\\n          <div class=\\\"on-hover\\\">\\n            <i class=\\\"fa fa-user-edit\\\" (click)=\\\"select(client); editState=true; listState=false;\\\"></i>\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </div>\\n        </div>\\n        <div class=\\\"table-cell col-3 phone\\\" (click)=\\\"createCommentsArray(client)\\\">\\n          <p>+380 {{ client.phone }}</p>\\n          <span *ngIf=\\\"client.comment\\\"></span>\\n          <p class=\\\"col-10 show-comment\\\" *ngIf=\\\"client.comment && comments.includes(client)\\\">{{ client.comment }}</p>\\n        </div>\\n        <div class=\\\"table-cell col-3\\\"><p>{{ client.doctor }}</p></div>\\n        <div class=\\\"table-cell col-3\\\"><p>{{ client.discount }}</p></div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-4 col-md-3 offset-8 button-area\\\">\\n      <button class=\\\"btn btn-success green\\\" (click)=\\\"listState = false; addState = true;\\\">Добавить</button>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"returnToStart()\\\">Меню</button>\\n    </div>\\n  </div>\\n\\n  <app-client-edit-form *ngIf=\\\"editState\\\" [client]=\\\"selectedClient\\\" (listState)=\\\"listState = $event; editState = !editState\\\"></app-client-edit-form>\\n  <app-client-add-form *ngIf=\\\"addState\\\" (listState)=\\\"listState = $event; addState = !addState\\\"></app-client-add-form>\\n  <!--<div class=\\\"add-new col-6\\\" *ngIf=\\\"!state\\\">\\n    <form>\\n      <label class=\\\"col-4\\\" for=\\\"lastname\\\">Фамилия:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"lastname\\\" type=\\\"text\\\" placeholder=\\\"Фамилия\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"client.lastname\\\">\\n\\n      <label class=\\\"col-4\\\" for=\\\"name\\\">Имя:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Имя\\\" name=\\\"name\\\" [(ngModel)]=\\\"client.name\\\">\\n\\n      <label class=\\\"col-4\\\" for=\\\"patronymic\\\">Отчество:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"patronymic\\\" type=\\\"text\\\" placeholder=\\\"Отчество\\\" name=\\\"patronymic\\\" [(ngModel)]=\\\"client.patronymic\\\">\\n\\n      <label class=\\\"col-4\\\" for=\\\"phone\\\">Телефон:</label>\\n      <div class=\\\"phone col-7 offset-1\\\">\\n        <input class=\\\"\\\" id=\\\"phone\\\" type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"client.phone\\\" specialCharacters=\\\"' '\\\" mask=\\\"00 000 00 00\\\">\\n        <span></span>\\n      </div>\\n\\n      <label class=\\\"col-4\\\" for=\\\"doctor\\\">Лечащий врач:</label>\\n      <div class=\\\"select col-7 offset-1\\\" id=\\\"doctor\\\">\\n        <select class=\\\"col-8\\\" name=\\\"doctor\\\" name=\\\"doctor\\\" [(ngModel)]=\\\"client.doctor\\\">\\n          <option *ngFor=\\\"let employee of employees\\\" [value]=\\\"employee.lastname\\\">{{ employee.lastname }} {{ employee.name }} {{employee.patronymic}}</option>\\n        </select>\\n      </div>\\n\\n      <label class=\\\"col-4\\\" for=\\\"discount\\\">Дисконт:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"discount\\\" type=\\\"number\\\" placeholder=\\\"Дисконт\\\" name=\\\"discount\\\" [(ngModel)]=\\\"client.discount\\\">\\n\\n      <label class=\\\"col-4\\\" for=\\\"comment\\\">Комментарий:</label>\\n      <textarea class=\\\"col-7 offset-1\\\" id=\\\"comment\\\" type=\\\"text\\\" cols=\\\"5\\\" placeholder=\\\"Комментарий\\\" name=\\\"comment\\\" [(ngModel)]=\\\"client.comment\\\"></textarea>\\n    </form>\\n    <div class=\\\"button-area-item\\\">\\n      <span class=\\\"error\\\" *ngIf=\\\"error\\\">{{ message }}</span>\\n      <button class=\\\"btn btn-success add-new-employee\\\" *ngIf=\\\"!editState\\\" (click)=\\\"addNew()\\\">Ok</button>\\n      <button class=\\\"btn btn-success add-new-employee\\\" *ngIf=\\\"editState\\\" (click)=\\\"editClient()\\\">Редактировать</button>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"state = true; editState = false;\\\">Назад</button>\\n    </div>\\n  </div>-->\\n\\n<!-- Form for adding -->\\n\\n  <!--<div class=\\\"col-sm-12 col-md-6 col-lg-6 add-new\\\" *ngIf=\\\"!state\\\">\\n    <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNew(clientForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"lastname\\\">Фамилия:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"lastname\\\"\\n               required [pattern]=\\\"myPat\\\"\\n               [(ngModel)]=\\\"client.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\">\\n        <div *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"lastname.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"name\\\">Имя:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"name\\\"\\n               required minlength=\\\"4\\\"\\n               [(ngModel)]=\\\"client.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"name.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"patronymic\\\">Отчество:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"patronymic\\\"\\n               required\\n               [(ngModel)]=\\\"client.patronymic\\\" name=\\\"patronymic\\\" #patronymic=\\\"ngModel\\\">\\n        <div *ngIf=\\\"patronymic.invalid && (patronymic.dirty || patronymic.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"patronymic.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group phone\\\">\\n        <label class=\\\"col-4\\\" for=\\\"phone\\\">Телефон:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"phone\\\"\\n               required minlength=\\\"9\\\" maxlength=\\\"9\\\"\\n               [(ngModel)]=\\\"client.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\">\\n        <div *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"phone.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n          <div *ngIf=\\\"phone.errors.minlength\\\">\\n            Name must be at least 9 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"doctor\\\">Лечащий врач:</label>\\n        <select class=\\\"form-control col-7\\\" id=\\\"doctor\\\" [(ngModel)]=\\\"client.doctor\\\" name=\\\"doctor\\\">\\n          <option *ngFor=\\\"let employee of employees\\\" [value]=\\\"employee.lastname\\\">\\n            {{employee.lastname}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"discount\\\">Дисконт:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"discount\\\"\\n               [(ngModel)]=\\\"client.discount\\\" name=\\\"discount\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"comment\\\">Комментарий:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"comment\\\"\\n               [(ngModel)]=\\\"client.comment\\\" name=\\\"comment\\\">\\n      </div>\\n\\n      <div class=\\\"button-area\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success add-new-employee\\\" [disabled]=\\\"!clientForm.form.valid\\\">Submit</button>\\n        <button class=\\\"btn btn-success add-new-employee\\\" *ngIf=\\\"editState\\\" (click)=\\\"editClient()\\\">Редактировать</button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"state = true; editState = false; clientForm.reset();\\\">Назад</button>\\n      </div>\\n\\n    </form>\\n  </div>-->\\n\\n  <!-- Form for editing -->\\n\\n  <!--<div class=\\\"col-sm-12 col-md-6 col-lg-6 add-new\\\" *ngIf=\\\"!state\\\">\\n    <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNew(clientForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"lastname\\\">Фамилия:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"lastname\\\"\\n               required [pattern]=\\\"myPat\\\"\\n               [(ngModel)]=\\\"client.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\">\\n        <div *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"lastname.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"name\\\">Имя:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"name\\\"\\n               required minlength=\\\"4\\\"\\n               [(ngModel)]=\\\"client.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"name.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"patronymic\\\">Отчество:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"patronymic\\\"\\n               required\\n               [(ngModel)]=\\\"client.patronymic\\\" name=\\\"patronymic\\\" #patronymic=\\\"ngModel\\\">\\n        <div *ngIf=\\\"patronymic.invalid && (patronymic.dirty || patronymic.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"patronymic.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group phone\\\">\\n        <label class=\\\"col-4\\\" for=\\\"phone\\\">Телефон:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"phone\\\"\\n               required minlength=\\\"9\\\" maxlength=\\\"9\\\"\\n               [(ngModel)]=\\\"client.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\">\\n        <div *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\"\\n             class=\\\"error-message\\\">\\n\\n          <div *ngIf=\\\"phone.errors.required\\\">\\n            Name is required.\\n          </div>\\n\\n          <div *ngIf=\\\"phone.errors.minlength\\\">\\n            Name must be at least 9 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"doctor\\\">Лечащий врач:</label>\\n        <select class=\\\"form-control col-7\\\" id=\\\"doctor\\\" [(ngModel)]=\\\"client.doctor\\\" name=\\\"doctor\\\">\\n          <option *ngFor=\\\"let employee of employees\\\" [value]=\\\"employee.lastname\\\">\\n            {{employee.lastname}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"discount\\\">Дисконт:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"discount\\\"\\n               [(ngModel)]=\\\"client.discount\\\" name=\\\"discount\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-4\\\" for=\\\"comment\\\">Комментарий:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"comment\\\"\\n               [(ngModel)]=\\\"client.comment\\\" name=\\\"comment\\\">\\n      </div>\\n\\n      <div class=\\\"button-area\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success add-new-employee\\\" [disabled]=\\\"!clientForm.form.valid\\\">Submit</button>\\n        <button class=\\\"btn btn-success add-new-employee\\\" *ngIf=\\\"editState\\\" (click)=\\\"editClient()\\\">Редактировать</button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"state = true; editState = false; clientForm.reset();\\\">Назад</button>\\n      </div>\\n\\n    </form>\\n  </div>-->\\n\\n</div>\\n\"","module.exports = \".button-area {\\n  margin-top: 20px;\\n  margin-right: 10%;\\n  display: flex;\\n  justify-content: flex-end; }\\n  .button-area .green {\\n    margin-right: 10px; }\\n  .form-area {\\n  margin: 30px auto; }\\n  .form-area .form-group:not(.textarea) {\\n    height: 38px; }\\n  .form-area .form-group {\\n    display: flex;\\n    position: relative; }\\n  .form-area .form-group .ng-valid[required], .form-area .form-group .ng-valid.required {\\n      border-right: 5px solid #61C180; }\\n  .form-area .form-group .ng-invalid:not(form) {\\n      border-right: 5px solid cornflowerblue; }\\n  .form-area .form-group .hidden {\\n      display: none; }\\n  .form-area .form-group .error-message {\\n      position: absolute;\\n      left: 35%;\\n      top: 100%;\\n      display: block; }\\n  .form-area .form-group .error-message div {\\n        color: darkred;\\n        font-size: 10px; }\\n  .form-area .form-group label {\\n      margin-top: 10px; }\\n  .form-area .form-group input {\\n      height: 100%; }\\n  .form-area .form-group textarea {\\n      font-size: 0.8em;\\n      resize: none; }\\n  .form-area .form-group input,\\n    .form-area .form-group textarea {\\n      border-radius: 5px;\\n      border: 1px solid #eee;\\n      outline: none;\\n      box-shadow: none; }\\n  .form-area .form-group input::-webkit-input-placeholder,\\n      .form-area .form-group textarea::-webkit-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-moz-placeholder,\\n      .form-area .form-group textarea:-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input::-moz-placeholder,\\n      .form-area .form-group textarea::-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-ms-input-placeholder,\\n      .form-area .form-group textarea:-ms-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:focus,\\n      .form-area .form-group textarea:focus {\\n        box-shadow: 0 0 5px cornflowerblue; }\\n  .form-area .form-group input:focus::-webkit-input-placeholder,\\n        .form-area .form-group textarea:focus::-webkit-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-moz-placeholder,\\n        .form-area .form-group textarea:focus:-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus::-moz-placeholder,\\n        .form-area .form-group textarea:focus::-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-ms-input-placeholder,\\n        .form-area .form-group textarea:focus:-ms-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group select {\\n      background-color: white;\\n      width: 100%;\\n      line-height: 38px;\\n      padding: 6px 20px 6px 15px;\\n      border: 1px solid #eee; }\\n  .form-area .form-group select:focus {\\n        outline: none;\\n        box-shadow: 0px 0px 5px cornflowerblue; }\\n  .form-area .form-group select option {\\n        padding-left: 30px; }\\n  .form-area div.phone {\\n    position: relative; }\\n  .form-area div.phone input {\\n      padding-left: 52px; }\\n  .form-area div.phone::after {\\n      content: '+380';\\n      color: black;\\n      position: absolute;\\n      width: 20px;\\n      height: 15px;\\n      top: 20%;\\n      left: 35%; }\\n  .content h3 {\\n  text-align: center;\\n  margin-bottom: 20px; }\\n  .content .table {\\n  padding: 0;\\n  display: flex;\\n  flex-direction: column;\\n  border: 1px solid #eee;\\n  border-radius: 5px; }\\n  .content .table .table-head {\\n    background-color: #e6f2ff;\\n    font-weight: bold; }\\n  .content .table div {\\n    display: flex;\\n    justify-content: space-between;\\n    max-height: 45px;\\n    min-height: 45px; }\\n  .content .table div .include-hover {\\n      position: relative; }\\n  .content .table div .include-hover:hover .on-hover {\\n        opacity: 1; }\\n  .content .table div .include-hover div.on-hover {\\n        position: absolute;\\n        justify-content: center !important;\\n        align-items: center;\\n        opacity: 0;\\n        width: 100%;\\n        background-color: #e6f2ff;\\n        transition: opacity 500ms cubic-bezier(0.25, 0.1, 0.25, 1); }\\n  .content .table div .include-hover div.on-hover .fa {\\n          padding: 3px;\\n          color: cornflowerblue;\\n          border: 2px solid cornflowerblue;\\n          border-radius: 3px;\\n          cursor: pointer; }\\n  .content .table div .include-hover div.on-hover .fa:first-of-type {\\n            margin-right: 20px; }\\n  .content .table div .include-hover div.on-hover .fa:last-of-type {\\n            padding: 3px 6px; }\\n  .content .table div .table-cell {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      margin: 0;\\n      padding: 10px 10px;\\n      border: 1px solid #eee; }\\n  .content .table div .table-cell p {\\n        margin: 0;\\n        font-size: 0.8em; }\\n  .content .table div .phone {\\n      position: relative; }\\n  .content .table div .phone span {\\n        position: absolute;\\n        width: 5px;\\n        height: 100%;\\n        top: 0;\\n        right: 0;\\n        background-color: cornflowerblue; }\\n  .content .table div .phone .show-comment {\\n        position: absolute;\\n        top: 120%;\\n        left: 18%;\\n        width: 100%;\\n        min-height: 30px;\\n        color: white;\\n        background-color: #77b7fa;\\n        font-size: 0.7em;\\n        border-radius: 5px;\\n        z-index: 10; }\\n  .content .table div .phone .show-comment::after {\\n          content: ' ';\\n          position: absolute;\\n          top: -10px;\\n          left: 25%;\\n          border-bottom: 10px solid #77b7fa;\\n          border-right: 10px solid transparent;\\n          border-left: 10px solid transparent; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { EmployeeService } from '../../services/employee-service/employee.service';\nimport { ClientService } from '../../services/client-service/client.service';\nimport { Employee } from '../../models/employee';\nimport { Client } from '../../models/client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n  employees: Employee[];\n  client: Client;\n  clients: Client[];\n  listState: boolean;\n  editState: boolean;\n  addState: boolean;\n  comments = [];\n  selectedClient: Client;\n\n  constructor(private router: Router, private clientService: ClientService, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.client = new Client;\n    this.listState = true;\n    this.editState = false;\n    this.addState = false;\n    this.employeeService.getEmployees()\n      .subscribe(\n        (res: Employee[]) => this.employees = res,\n        (error) => this.router.navigate(['/error'])\n      );\n    this.clientService.getClients()\n      .subscribe(\n        res => this.clients = res,\n        (error) => {\n          console.log(error);\n          this.router.navigate(['/error']);\n        }\n      );\n  }\n\n  returnToStart() {\n    this.router.navigate(['/main/start']);\n  }\n\n  select(client) {\n    this.selectedClient = client;\n  }\n\n  createCommentsArray(client): void {\n    if (this.comments.includes(client)) {\n      this.comments = [];\n    } else {\n      this.comments = [];\n      this.comments.push(client);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"col-sm-12 col-md-6 col-lg-6 form-area\\\">\\n  <form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"addEmployee(employeeForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"lastname\\\">Фамилия:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"lastname\\\"\\n             required\\n             [(ngModel)]=\\\"employee.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\">\\n\\n      <div *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"lastname.errors.required\\\">Заполните это поле</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!lastname.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"name\\\">Имя:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"name\\\"\\n             required\\n             [(ngModel)]=\\\"employee.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n      <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"name.errors.required\\\">Заполните это поле</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!name.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"patronymic\\\">Отчество:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"patronymic\\\"\\n             [(ngModel)]=\\\"employee.patronymic\\\" name=\\\"patronymic\\\">\\n    </div>\\n\\n    <div class=\\\"form-group phone\\\">\\n      <label class=\\\"col-4\\\" for=\\\"phone\\\">Телефон:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"phone\\\"\\n             minlength=\\\"9\\\" maxlength=\\\"9\\\"\\n             [(ngModel)]=\\\"employee.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\">\\n      <div *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"phone.errors.minlength\\\">Телефон должен состоять из 9 знаков</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"role\\\">Должность:</label>\\n      <select class=\\\"form-control col-7\\\" id=\\\"role\\\" [(ngModel)]=\\\"employee.role\\\" name=\\\"role\\\" #role=\\\"ngModel\\\" required>\\n        <option value=\\\"1\\\">Админ</option>\\n        <option value=\\\"2\\\">Доктор</option>\\n      </select>\\n      <div *ngIf=\\\"role.invalid && (role.dirty || role.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"login.errors.required\\\">Заполните это поле</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!role.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"login\\\">Логин:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"login\\\"\\n             [(ngModel)]=\\\"employee.login\\\" name=\\\"login\\\" #login=\\\"ngModel\\\" required>\\n      <div *ngIf=\\\"login.invalid && (login.dirty || login.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"login.errors.required\\\">Заполните это поле</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!login.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-4\\\" for=\\\"password\\\">Пароль:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-7\\\" id=\\\"password\\\"\\n                [(ngModel)]=\\\"employee.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n      <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"error-message\\\">\\n        <div *ngIf=\\\"password.errors.required\\\">Заполните это поле</div>\\n      </div>\\n      <div class=\\\"hidden\\\" [class.error-message]=\\\"errorMessage\\\" *ngIf=\\\"!password.dirty\\\">\\n        <div>Заполните это поле</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"button-area\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success green\\\">Ок</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"changeBoolean(); employeeForm.reset();\\\">Назад</button>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","module.exports = \".button-area {\\n  margin-top: 20px;\\n  margin-right: 10%;\\n  display: flex;\\n  justify-content: flex-end; }\\n  .button-area .green {\\n    margin-right: 10px; }\\n  .form-area {\\n  margin: 30px auto; }\\n  .form-area .form-group:not(.textarea) {\\n    height: 38px; }\\n  .form-area .form-group {\\n    display: flex;\\n    position: relative; }\\n  .form-area .form-group .ng-valid[required], .form-area .form-group .ng-valid.required {\\n      border-right: 5px solid #61C180; }\\n  .form-area .form-group .ng-invalid:not(form) {\\n      border-right: 5px solid cornflowerblue; }\\n  .form-area .form-group .hidden {\\n      display: none; }\\n  .form-area .form-group .error-message {\\n      position: absolute;\\n      left: 35%;\\n      top: 100%;\\n      display: block; }\\n  .form-area .form-group .error-message div {\\n        color: darkred;\\n        font-size: 10px; }\\n  .form-area .form-group label {\\n      margin-top: 10px; }\\n  .form-area .form-group input {\\n      height: 100%; }\\n  .form-area .form-group textarea {\\n      font-size: 0.8em;\\n      resize: none; }\\n  .form-area .form-group input,\\n    .form-area .form-group textarea {\\n      border-radius: 5px;\\n      border: 1px solid #eee;\\n      outline: none;\\n      box-shadow: none; }\\n  .form-area .form-group input::-webkit-input-placeholder,\\n      .form-area .form-group textarea::-webkit-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-moz-placeholder,\\n      .form-area .form-group textarea:-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input::-moz-placeholder,\\n      .form-area .form-group textarea::-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-ms-input-placeholder,\\n      .form-area .form-group textarea:-ms-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:focus,\\n      .form-area .form-group textarea:focus {\\n        box-shadow: 0 0 5px cornflowerblue; }\\n  .form-area .form-group input:focus::-webkit-input-placeholder,\\n        .form-area .form-group textarea:focus::-webkit-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-moz-placeholder,\\n        .form-area .form-group textarea:focus:-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus::-moz-placeholder,\\n        .form-area .form-group textarea:focus::-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-ms-input-placeholder,\\n        .form-area .form-group textarea:focus:-ms-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group select {\\n      background-color: white;\\n      width: 100%;\\n      line-height: 38px;\\n      padding: 6px 20px 6px 15px;\\n      border: 1px solid #eee; }\\n  .form-area .form-group select:focus {\\n        outline: none;\\n        box-shadow: 0px 0px 5px cornflowerblue; }\\n  .form-area .form-group select option {\\n        padding-left: 30px; }\\n  .form-area div.phone {\\n    position: relative; }\\n  .form-area div.phone input {\\n      padding-left: 52px; }\\n  .form-area div.phone::after {\\n      content: '+380';\\n      color: black;\\n      position: absolute;\\n      width: 20px;\\n      height: 15px;\\n      top: 20%;\\n      left: 35%; }\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { EmployeeService } from '../../../services/employee-service/employee.service';\nimport { Router } from '@angular/router';\nimport { Employee } from '../../../models/employee';\n\n@Component({\n  selector: 'app-employee-add-form',\n  templateUrl: './employee-add-form.component.html',\n  styleUrls: ['./employee-add-form.component.scss']\n})\nexport class EmployeeAddFormComponent implements OnInit {\n  @Output() listState = new EventEmitter<boolean>();\n\n  employee: Employee;\n  errorMessage: boolean;\n\n  constructor(private router: Router, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee;\n  }\n\n  changeBoolean() {\n    this.listState.emit(true);\n  }\n\n  addEmployee(form) {\n    if (form.invalid) {\n      this.errorMessage = true;\n      return;\n    }\n    const value = form.value;\n    const newEmployee = new Employee;\n    newEmployee.lastname = value.lastname;\n    newEmployee.name = value.name;\n    newEmployee.patronymic = value.patronymic;\n    newEmployee.phone = value.phone;\n    newEmployee.login = value.comment;\n    newEmployee.password = value.discount;\n    newEmployee.role = value.doctor;\n\n    this.changeBoolean(); // TODO: remove after DB connecting\n    /*this.employeeService.addEmployee(newEmployee)\n      .subscribe(\n        (res) => this.changeBoolean(),\n        (error) => this.router.navigate(['/error'])\n      );*/\n  }\n\n}\n","module.exports = \"<div class=\\\"content col-12\\\">\\n  <div class=\\\"employees-list\\\" *ngIf=\\\"listState\\\">\\n    <h3 class=\\\"col-12\\\">Сотрудники TalMedical</h3>\\n    <div class=\\\"table col-10\\\">\\n      <div class=\\\"table-head\\\">\\n        <div class=\\\"table-cell col-3\\\"><p>Ф.И.О</p></div>\\n        <div class=\\\"table-cell col-2\\\"><p>Должность</p></div>\\n        <div class=\\\"table-cell col-2\\\"><p>Логин</p></div>\\n        <div class=\\\"table-cell col-2\\\"><p>Пароль</p></div>\\n        <div class=\\\"table-cell col-3\\\"><p>Телефон</p></div>\\n      </div>\\n      <div class=\\\"table-row\\\" *ngFor=\\\"let employee of employees\\\">\\n        <div class=\\\"table-cell col-3 include-hover\\\">\\n          <p>{{ employee.lastname }} {{ employee.name }} {{employee.patronymic}}</p>\\n          <div class=\\\"on-hover\\\">\\n            <!--<i class=\\\"fa fa-user-edit\\\"></i>-->\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </div>\\n        </div>\\n        <div class=\\\"table-cell col-2\\\"><p>{{ employee.role }}</p></div>\\n        <div class=\\\"table-cell col-2\\\"><p>{{ employee.login }}</p></div>\\n        <div class=\\\"table-cell col-2\\\"><p>{{ employee.password }}</p></div>\\n        <div class=\\\"table-cell col-3\\\"><p>+380 {{ employee.phone }}</p></div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-4 col-md-3 offset-8 button-area\\\">\\n      <button class=\\\"btn btn-success green\\\" (click)=\\\"addState = true; listState = false\\\">Добавить</button>\\n      <button class=\\\"btn btn-primary blue\\\" (click)=\\\"returnToStart()\\\">Меню</button>\\n    </div>\\n  </div>\\n\\n  <app-employee-add-form *ngIf=\\\"addState\\\" (listState)=\\\"listState = $event; addState = !addState\\\"></app-employee-add-form>\\n\\n\\n  <!--<div class=\\\"form-area col-6\\\" *ngIf=\\\"!state\\\">\\n    <form>\\n      <label class=\\\"col-3\\\" for=\\\"lastname\\\">Фамилия:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"lastname\\\" type=\\\"text\\\" placeholder=\\\"Фамилия\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"employee.lastname\\\">\\n\\n      <label class=\\\"col-3\\\" for=\\\"name\\\">Имя:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Имя\\\" name=\\\"name\\\" [(ngModel)]=\\\"employee.name\\\">\\n\\n      <label class=\\\"col-3\\\" for=\\\"patronymic\\\">Отчество:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"patronymic\\\" type=\\\"text\\\" placeholder=\\\"Отчество\\\" name=\\\"patronymic\\\" [(ngModel)]=\\\"employee.patronymic\\\">\\n\\n      <label class=\\\"col-3 phone\\\" for=\\\"phone\\\">Телефон:</label>\\n      <div class=\\\"phone col-7 offset-1\\\">\\n        <input class=\\\"\\\" id=\\\"phone\\\" type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"employee.phone\\\" specialCharacters=\\\"' '\\\" mask=\\\"00 000 00 00\\\">\\n      </div>\\n\\n      <label class=\\\"col-3\\\" for=\\\"role\\\">Должность:</label>\\n      <div class=\\\"select col-7 offset-1\\\" id=\\\"role\\\">\\n        <select class=\\\"col-8\\\" name=\\\"role\\\" name=\\\"role\\\" [(ngModel)]=\\\"employee.role\\\">\\n          <option value=\\\"1\\\">Админ</option>\\n          <option value=\\\"2\\\">Доктор</option>\\n        </select>\\n      </div>\\n\\n      <label class=\\\"col-3\\\" for=\\\"login\\\">Логин:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"login\\\" type=\\\"text\\\" placeholder=\\\"Логин\\\" name=\\\"login\\\" [(ngModel)]=\\\"employee.login\\\">\\n\\n      <label class=\\\"col-3\\\" for=\\\"pass\\\">Пароль:</label>\\n      <input class=\\\"col-7 offset-1\\\" id=\\\"pass\\\" type=\\\"password\\\" placeholder=\\\"Пароль\\\" name=\\\"password\\\" [(ngModel)]=\\\"employee.password\\\">\\n    </form>\\n    <div class=\\\"button-area\\\">\\n      <button class=\\\"btn btn-success green\\\" (click)=\\\"addNew()\\\">Ok</button>\\n      <button class=\\\"btn btn-primary blue\\\" (click)=\\\"state = true; error = false\\\">Назад</button>\\n    </div>\\n  </div>-->\\n</div>\\n\"","module.exports = \".button-area {\\n  margin-top: 20px;\\n  margin-right: 10%;\\n  display: flex;\\n  justify-content: flex-end; }\\n  .button-area .green {\\n    margin-right: 10px; }\\n  .form-area {\\n  margin: 30px auto; }\\n  .form-area .form-group:not(.textarea) {\\n    height: 38px; }\\n  .form-area .form-group {\\n    display: flex;\\n    position: relative; }\\n  .form-area .form-group .ng-valid[required], .form-area .form-group .ng-valid.required {\\n      border-right: 5px solid #61C180; }\\n  .form-area .form-group .ng-invalid:not(form) {\\n      border-right: 5px solid cornflowerblue; }\\n  .form-area .form-group .hidden {\\n      display: none; }\\n  .form-area .form-group .error-message {\\n      position: absolute;\\n      left: 35%;\\n      top: 100%;\\n      display: block; }\\n  .form-area .form-group .error-message div {\\n        color: darkred;\\n        font-size: 10px; }\\n  .form-area .form-group label {\\n      margin-top: 10px; }\\n  .form-area .form-group input {\\n      height: 100%; }\\n  .form-area .form-group textarea {\\n      font-size: 0.8em;\\n      resize: none; }\\n  .form-area .form-group input,\\n    .form-area .form-group textarea {\\n      border-radius: 5px;\\n      border: 1px solid #eee;\\n      outline: none;\\n      box-shadow: none; }\\n  .form-area .form-group input::-webkit-input-placeholder,\\n      .form-area .form-group textarea::-webkit-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-moz-placeholder,\\n      .form-area .form-group textarea:-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input::-moz-placeholder,\\n      .form-area .form-group textarea::-moz-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:-ms-input-placeholder,\\n      .form-area .form-group textarea:-ms-input-placeholder {\\n        color: #c4d9ff;\\n        font-size: 14px;\\n        font-style: italic;\\n        opacity: 1;\\n        transition: opacity 200ms; }\\n  .form-area .form-group input:focus,\\n      .form-area .form-group textarea:focus {\\n        box-shadow: 0 0 5px cornflowerblue; }\\n  .form-area .form-group input:focus::-webkit-input-placeholder,\\n        .form-area .form-group textarea:focus::-webkit-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-moz-placeholder,\\n        .form-area .form-group textarea:focus:-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus::-moz-placeholder,\\n        .form-area .form-group textarea:focus::-moz-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group input:focus:-ms-input-placeholder,\\n        .form-area .form-group textarea:focus:-ms-input-placeholder {\\n          opacity: 0; }\\n  .form-area .form-group select {\\n      background-color: white;\\n      width: 100%;\\n      line-height: 38px;\\n      padding: 6px 20px 6px 15px;\\n      border: 1px solid #eee; }\\n  .form-area .form-group select:focus {\\n        outline: none;\\n        box-shadow: 0px 0px 5px cornflowerblue; }\\n  .form-area .form-group select option {\\n        padding-left: 30px; }\\n  .form-area div.phone {\\n    position: relative; }\\n  .form-area div.phone input {\\n      padding-left: 52px; }\\n  .form-area div.phone::after {\\n      content: '+380';\\n      color: black;\\n      position: absolute;\\n      width: 20px;\\n      height: 15px;\\n      top: 20%;\\n      left: 35%; }\\n  .content h3 {\\n  text-align: center;\\n  margin-bottom: 20px; }\\n  .content .table {\\n  padding: 0;\\n  display: flex;\\n  flex-direction: column;\\n  border: 1px solid #eee;\\n  border-radius: 5px; }\\n  .content .table .table-head {\\n    background-color: #e6f2ff;\\n    font-weight: bold; }\\n  .content .table div {\\n    display: flex;\\n    justify-content: space-between;\\n    max-height: 45px;\\n    min-height: 45px; }\\n  .content .table div .include-hover {\\n      position: relative; }\\n  .content .table div .include-hover:hover .on-hover {\\n        opacity: 1; }\\n  .content .table div .include-hover div.on-hover {\\n        position: absolute;\\n        justify-content: center !important;\\n        align-items: center;\\n        opacity: 0;\\n        width: 100%;\\n        background-color: #e6f2ff;\\n        transition: opacity 500ms cubic-bezier(0.25, 0.1, 0.25, 1); }\\n  .content .table div .include-hover div.on-hover .fa {\\n          padding: 3px;\\n          color: cornflowerblue;\\n          border: 2px solid cornflowerblue;\\n          border-radius: 3px;\\n          cursor: pointer; }\\n  .content .table div .include-hover div.on-hover .fa:first-of-type {\\n            margin-right: 20px; }\\n  .content .table div .include-hover div.on-hover .fa:last-of-type {\\n            padding: 3px 6px; }\\n  .content .table div .table-cell {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      margin: 0;\\n      padding: 10px 10px;\\n      border: 1px solid #eee; }\\n  .content .table div .table-cell p {\\n        margin: 0;\\n        font-size: 0.8em; }\\n  .content .table div .phone {\\n      position: relative; }\\n  .content .table div .phone span {\\n        position: absolute;\\n        width: 5px;\\n        height: 100%;\\n        top: 0;\\n        right: 0;\\n        background-color: cornflowerblue; }\\n  .content .table div .phone .show-comment {\\n        position: absolute;\\n        top: 120%;\\n        left: 18%;\\n        width: 100%;\\n        min-height: 30px;\\n        color: white;\\n        background-color: #77b7fa;\\n        font-size: 0.7em;\\n        border-radius: 5px;\\n        z-index: 10; }\\n  .content .table div .phone .show-comment::after {\\n          content: ' ';\\n          position: absolute;\\n          top: -10px;\\n          left: 25%;\\n          border-bottom: 10px solid #77b7fa;\\n          border-right: 10px solid transparent;\\n          border-left: 10px solid transparent; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../services/employee-service/employee.service';\nimport { Employee } from '../../models/employee';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.scss']\n})\nexport class EmployeesComponent implements OnInit {\n  employee: Employee;\n  employees: Employee[];\n  listState: boolean;\n  addState: boolean;\n\n  constructor(private router: Router, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.listState = true;\n    this.addState = false;\n    this.employee = new Employee;\n    this.employee.role = 2;\n    this.employeeService.getEmployees()\n      .subscribe(\n        (res: Employee[]) => this.employees = res,\n        (error) => this.router.navigate(['/error'])\n      );\n  }\n\n  returnToStart() {\n    this.router.navigate(['/main/start']);\n  }\n\n  /*addNew() {\n    if (!this.employee.lastname || !this.employee.name || !this.employee.login || !this.employee.password) {\n      this.error = true;\n      this.message = 'Fill in all fields, please';\n    } else {\n      this.error = false;\n      this.employeeService.addEmployee(this.employee)\n        .subscribe(\n          (res) => this.state = !this.state,\n          (error) => this.router.navigate(['/error'])\n        );\n    }\n  }*/\n\n  /*submit(form): void {\n    if (form.invalid) {\n\n      return;\n    }\n    this.submitted = true;\n    const serviceResponse = this.userService.createUser(this.user);\n    serviceResponse.subscribe(\n      () => this.router.navigate([{ outlets: { popup: 'summary' }}]),\n      () => console.log('Something wrong: the database error')\n    );\n  }*/\n\n\n}\n","module.exports = \"<div class=\\\"container col-sm-6\\\">\\n  <div class=\\\"image col-sm-4\\\"></div>\\n  <h1>Oops! Something went wrong...</h1>\\n  <h1>Call your admin!</h1>\\n  <br>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"returnToMain()\\\">Return</button>\\n</div>\\n\"","module.exports = \"div:first-of-type {\\n  margin-top: 3%; }\\n\\n.image {\\n  min-width: 150px;\\n  min-height: 150px;\\n  background: url('404.gif') no-repeat;\\n  background-size: contain; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  returnToMain() {\n    this.router.navigate(['/main/start']);\n  }\n}\n","module.exports = \"<app-header></app-header>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'header-page',\n  templateUrl: './header-page.component.html',\n  styleUrls: ['./header-page.component.scss']\n})\nexport class HeaderPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <h1 class=\\\"logo col-9\\\"><i class=\\\"fa fa-ambulance\\\"></i> TalMedical</h1>\\n  <button\\n    class=\\\"btn btn-primary col-sm-2 col-md-1 log-out\\\"\\n    (click)=\\\"returnToLogin()\\\"\\n    *ngIf=\\\"location.indexOf('main') > -1\\\">Выйти <i class=\\\"fa fa-sign-out\\\"></i></button>\\n</div>\\n\"","module.exports = \".container {\\n  padding: 10px;\\n  background-color: #e6f2ff;\\n  border: 1px solid #eee;\\n  border-radius: 5px;\\n  display: flex;\\n  justify-content: space-between; }\\n  .container h1 i {\\n    color: cornflowerblue; }\\n  .container button.log-out {\\n    height: 80%;\\n    -ms-grid-row-align: center;\\n        align-self: center;\\n    margin-right: 3%; }\\n  .container button.log-out .fa {\\n      color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  location = '';\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.router.events.subscribe((data: any) => {\n      this.location = data.url;\n    });\n  }\n\n\n  returnToLogin(): void {\n    this.router.navigate(['']);\n  }\n}\n","module.exports = \"<div class=\\\"container col-sm-9 col-md-4 col-lg-4\\\">\\n  <div class=\\\"form-horizontal\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"login\\\">Логин:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <i class=\\\"fa fa-user\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"login\\\" placeholder=\\\"Введите логин\\\" name=\\\"login\\\">\\n      </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"pass\\\">Пароль:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <i class=\\\"fa fa-key\\\"></i>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"pass\\\" placeholder=\\\"Введите пароль\\\" name=\\\"pwd\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-2 offset-sm-9\\\">\\n        <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"sub()\\\">Войти</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"div.container {\\n  margin-top: 15%;\\n  padding: 25px 10px 10px;\\n  background-color: aliceblue;\\n  border: 1px solid #eee;\\n  border-radius: 5px; }\\n\\nlabel + div {\\n  display: inline-block; }\\n\\n.fa {\\n  position: absolute;\\n  color: cornflowerblue;\\n  top: 25%;\\n  left: 25px; }\\n\\ninput {\\n  padding-left: 30px;\\n  border-radius: 5px;\\n  border: 1px solid #eee;\\n  outline: none;\\n  box-shadow: none; }\\n\\ninput::-webkit-input-placeholder {\\n    color: #c4d9ff;\\n    font-size: 14px;\\n    font-style: italic;\\n    opacity: 1;\\n    transition: opacity 200ms; }\\n\\ninput:-moz-placeholder {\\n    color: #c4d9ff;\\n    font-size: 14px;\\n    font-style: italic;\\n    opacity: 1;\\n    transition: opacity 200ms; }\\n\\ninput::-moz-placeholder {\\n    color: #c4d9ff;\\n    font-size: 14px;\\n    font-style: italic;\\n    opacity: 1;\\n    transition: opacity 200ms; }\\n\\ninput:-ms-input-placeholder {\\n    color: #c4d9ff;\\n    font-size: 14px;\\n    font-style: italic;\\n    opacity: 1;\\n    transition: opacity 200ms; }\\n\\ninput:focus {\\n    box-shadow: 0 0 5px cornflowerblue; }\\n\\ninput:focus::-webkit-input-placeholder {\\n      opacity: 0; }\\n\\ninput:focus:-moz-placeholder {\\n      opacity: 0; }\\n\\ninput:focus::-moz-placeholder {\\n      opacity: 0; }\\n\\ninput:focus:-ms-input-placeholder {\\n      opacity: 0; }\\n\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport '../../animation';\n\n// @HostBinding('@routeAnimation') routeAnimation = true;\n// @HostBinding('style.display')   display = 'block';\n// @HostBinding('style.position')  position = 'absolute';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  sub(): void {\n    this.router.navigate(['/main/start']);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n\\n\\n <!-- <div>\\n    <input type=\\\"text\\\" #name>\\n    <input type=\\\"text\\\" #age>\\n    <input type=\\\"text\\\" #phone>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onSave(name.value, age.value, phone.value)\\\">Save</button>\\n  </div>-->\\n\\n  <!--<button class=\\\"btn btn-success\\\" (click)=\\\"onGet()\\\">Get</button>-->\\n\\n\\n  <!--<div *ngIf=\\\"data2\\\">User: {{ data2.name }}</div>-->\\n</div>\\n\"","module.exports = \".content {\\n  margin-top: 7%;\\n  min-height: 450px;\\n  padding: 30px 30px;\\n  background-color: #fafcff;\\n  border-radius: 5px;\\n  border: 1px solid #eee; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from '../../services/employee-service/employee.service';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n  users = [\n    {\n      name: 'Anton',\n      age: 25\n    },\n    {\n      name: 'Max',\n      age: 30\n    }\n  ];\n\n  // data: User[];\n  // data2: User;\n\n  constructor(private router: Router, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n  }\n\n\n  /*onSave(name, age, phone): void {\n    const user = [{\n      name: name,\n      age: +age,\n      phone: +phone\n    }];\n    this.servereServese.storeServ(user)\n      .subscribe(\n        (res) => console.log(res),\n        (error) => this.router.navigate(['/error'])\n      );\n  }*/\n\n  /*onGet(): void {\n    this.employeeService.getUsers()\n      .subscribe(\n        (res: User) => this.data2 = res,\n            (error) => this.router.navigate(['/error'])\n    );\n  }*/\n}\n","module.exports = \"<div class=\\\"content col-10 offset-1\\\">\\n  <div class=\\\"top-content col-12\\\">\\n\\n    <div class=\\\"col-3\\\" (click)=\\\"moveToClientsList()\\\">\\n      <div class=\\\"fa-content\\\">\\n        <i class=\\\"fa fa-users\\\"></i>\\n      </div>\\n      <p>Клиенты</p>\\n    </div>\\n\\n    <div class=\\\"col-3\\\" (click)=\\\"moveToEmployeePage()\\\">\\n      <div class=\\\"fa-content\\\">\\n        <i class=\\\"fa fa-user-md\\\"></i>\\n      </div>\\n      <p>Сотрудники</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"bottom-content col-12\\\">\\n    <div class=\\\"col-3\\\">\\n      <div class=\\\"fa-content\\\">\\n        <i class=\\\"fa fa-clipboard-list\\\"></i>\\n      </div>\\n      <p>Таблица посещений</p>\\n    </div>\\n\\n    <!--<div class=\\\"col-3\\\">\\n      <div class=\\\"fa-content\\\">\\n        <i class=\\\"fa fa-cogs\\\"></i>\\n      </div>\\n      <p>Настройки</p>\\n    </div>-->\\n\\n    <div class=\\\"col-3\\\">\\n      <div class=\\\"fa-content\\\">\\n        <i class=\\\"fa fa-hospital-alt\\\"></i>\\n      </div>\\n      <p>Кабинеты</p>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".content .top-content,\\n.content .bottom-content {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  padding: 10px; }\\n  .content .top-content > div,\\n  .content .bottom-content > div {\\n    padding: 10px;\\n    background-color: aliceblue;\\n    border: 1px solid #eee;\\n    border-radius: 5px; }\\n  .content .top-content > div div,\\n    .content .bottom-content > div div {\\n      padding: 10px 25px;\\n      background-color: #dbedff;\\n      text-align: center; }\\n  .content .top-content > div div i,\\n      .content .bottom-content > div div i {\\n        margin-top: 2%; }\\n  .content .top-content > div div i::before,\\n        .content .bottom-content > div div i::before {\\n          color: white;\\n          font-size: 5em; }\\n  .content .top-content > div p,\\n    .content .bottom-content > div p {\\n      margin: 5px auto 0;\\n      text-align: center; }\\n  .content .top-content > div:hover,\\n  .content .bottom-content > div:hover {\\n    box-shadow: 0px 0px 5px cornflowerblue; }\\n  .content .bottom-content {\\n  margin-top: 30px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-start-page',\n  templateUrl: './start-page.component.html',\n  styleUrls: ['./start-page.component.scss']\n})\nexport class StartPageComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  moveToEmployeePage() {\n    this.router.navigate(['main/employees']);\n  }\n\n  moveToClientsList() {\n    this.router.navigate(['main/clients']);\n  }\n\n}\n","export class Client {\n  name: string;\n  patronymic: string;\n  lastname: string;\n  doctor: any;\n  comment: string;\n  phone: any;\n  discount?: number;\n\n  constructor(name?: string, lastname?: string) {\n    this.name = name;\n    this.lastname = lastname;\n  }\n}\n","export class Employee {\n  name: string;\n  patronymic?: string;\n  lastname: string;\n  role: any;\n  login: string;\n  password: string;\n  phone?: any;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from '../../components/login/login.component';\nimport { MainComponent } from '../../components/main/main.component';\nimport { ErrorComponent } from '../../components/error/error.component';\nimport { EmployeesComponent } from '../../components/employees/employees.component';\nimport { StartPageComponent } from '../../components/start-page/start-page.component';\nimport { ClientsComponent } from '../../components/clients/clients.component';\n\nconst contentRoutes: Routes = [\n  { path: 'start', component: StartPageComponent },\n  { path: 'employees', component: EmployeesComponent },\n  { path: 'clients', component: ClientsComponent }\n];\n\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'main', component: MainComponent, children: contentRoutes },\n  { path: 'error', component: ErrorComponent },\n  { path: '**', component: ErrorComponent }\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Client } from '../../models/client';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class ClientService {\n\n  constructor(private http: HttpClient) { }\n\n  getClients(): Observable<Client[]> {\n    // return this.http.get<Client[]>('https://test-c9485.firebaseio.com/clients.json')\n    return this.http.get<Client[]>('./assets/db/clients.json')\n      .catch(\n        (error) => {\n          return Observable.throw('It\\'s an error here. Call your admin');\n        }\n      );\n  }\n\n  addClient(client: Client) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    // return this.http.post('https://test-c9485.firebaseio.com/clients.json', client);\n    return this.http.post('assets/db/clients.json', client, httpOptions); // TODO: doesn't work, can't find path\n  }\n\n  editClient(client: Client) {\n    return this.http.put('https://test-c9485.firebaseio.com/clients.json', client);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Employee } from '../../models/employee';\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees() {\n    return this.http.get<Employee[]>('https://test-c9485.firebaseio.com/employees.json')\n      .map(\n        res => {\n          for (const employee of res) {\n            switch (employee.role) {\n              case 1:\n                employee.role = 'Админ';\n                break;\n              case 2:\n                employee.role = 'Доктор';\n                break;\n              default:\n                employee.role = 'Определите роль';\n            }\n\n            employee.phone = employee.phone.toString().split('');\n            employee.phone.splice(2, 0, ' ');\n            employee.phone.splice(6, 0, ' ');\n            employee.phone.splice(9, 0, ' ');\n            employee.phone = employee.phone.join('');\n          }\n          return res;\n        }\n      )\n      .catch(\n        (error) => {\n          return Observable.throw('It\\'s an error here. Call your admin');\n        }\n      );\n  }\n\n  addEmployee(employee: Employee) {\n    return this.http.post('https://test-c9485.firebaseio.com/employees.json', employee);\n  }\n\n  getUsers() {\n    return this.http.get('http://localhost:8080/user');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}